<?php

/**
 * @file
 * Module used to export/import settings for teaser and full nodes view modes.
 */

/**
 * Exports selected view modes.
 *
 * @param array $view_modes
 *   View modes array.
 * @param string $bundle
 *   Bundle name.
 *
 * @return string
 *   Serialized exported settings.
 */
function _nexteuropa_free_view_modes_export_modes($view_modes = array('full', 'teaser'), $bundle = NEXTEUROPA_NEWSROOM_CONTENT_TYPE) {
  // Get the current instances.
  $fields = field_info_instances('node', $bundle);
  $export = array();

  foreach ($fields as $field_name => $field_instance) {
    foreach ($view_modes as $view_mode) {
      $export['instances'][$field_name][$view_mode] = isset($fields[$field_name]['display'][$view_mode]) ? $fields[$field_name]['display'][$view_mode] : NULL;
    }
  }

  // Add the groups export.
  $export['groups'] = _nexteuropa_free_view_modes_get_real_groups();

  return serialize($export);
}

/**
 * Submit handler, exports selected view modes.
 *
 * @param array $form
 *   Form array.
 * @param array $form_state
 *   Form state.
 *
 * @return string
 *   Serialized iexported settings for view mode.
 */
function _nexteuropa_free_view_modes_export_modes_submit(&$form, &$form_state) {
  $export = $form_state['values']['export_code'];

  if (!empty($export)) {
    variable_set('nexteuropa_newsroom_view_modes_backup', $export);
  }

  $form['newsroom_export'] = array(
    '#type' => 'markup',
    '#markup' => '<div class="newsroom_export"><div class="messages status"> ' . t('Your settings have been saved in the database.') . '</div></div>',
    '#weight' => 97,
  );

  return $form['newsroom_export'];
}

/**
 * Validation handler for view mode importer.
 *
 * @param array $form
 *   Form array.
 * @param array $form_state
 *   Form state.
 */
function _nexteuropa_free_view_modes_validate_modes(&$form, &$form_state) {
  if (!empty($form_state['values']['import_code'])) {
    $export = unserialize($form_state['values']['import_code']);

    if (empty($export['instances'])) {
      form_set_error('import_code', t("The code you pasted doesn't seem to contain a valid export of your settings."));
    }
  }
  else {
    form_set_error('import_code', t('There was nothing to restore from, did you paste the exported code..?'));
  }
}

/**
 * Submit handler, get the settings to be restored.
 *
 * @param array $form
 *   Form array.
 * @param array $form_state
 *   Form state.
 */
function _nexteuropa_free_view_modes_restore_modes(&$form, &$form_state) {
  $trigger = $form_state['triggering_element']['#name'];

  switch ($trigger) {
    case 'newsroom_restore':
      $export = unserialize(variable_get('nexteuropa_newsroom_view_modes_backup'));
      break;

    default:
      $export = unserialize($form_state['values']['import_code']);
  }

  _nexteuropa_free_view_modes_import_modes($export);

}

/**
 * Restores settings.
 *
 * @param array $export
 *   Exported view mode settings.
 *
 * @return string
 *   Message string.
 */
function _nexteuropa_free_view_modes_import_modes($export) {
  $view_modes = array('full', 'teaser');

  if (!empty($export['groups'])) {
    $groups = $export['groups'];
    foreach ($view_modes as $view_mode) {
      if (!empty($groups[$view_mode])) {
        // Clean up the groups before the import.
        $view_mode_groups = field_group_info_groups('node', NEXTEUROPA_NEWSROOM_CONTENT_TYPE, $view_mode, TRUE);
        // We need to check the disabled groups, which can be deleted through
        // UI.
        $view_mode_disabled_groups = field_group_read_groups(
          array(
            'entity_type' => 'node',
            'bundle' => NEXTEUROPA_NEWSROOM_CONTENT_TYPE,
            'mode' => $view_mode,
          ), FALSE);
        if ($view_mode_disabled_groups) {
          $view_mode_groups = array_merge($view_mode_groups, $view_mode_disabled_groups['node'][NEXTEUROPA_NEWSROOM_CONTENT_TYPE][$view_mode]);
        }

        foreach ($view_mode_groups as $group) {
          field_group_group_export_delete($group);
        }
        // Clean cache to see the actual groups later.
        cache_clear_all('field_groups', 'cache_field');

        foreach ($groups[$view_mode] as $group_name => $group) {
          if (field_group_exists($group->group_name, $group->entity_type, $group->bundle, $group->mode)) {
            $old_group = field_group_load_field_group($group->group_name, $group->entity_type, $group->bundle, $group->mode);
            if ($old_group) {
              $group->id = $old_group->id;
            }
          }
          else {
            // We set export_type to 0, if we need to create a new field group.
            $group->export_type = 0;
          }
          $group->disabled = FALSE;

          field_group_group_save($group);
          // The group was deleted through UI, it will be marked as disabled in
          // ctools. We need to enable it.
          if ((isset($group->disabled) && ($group->disabled == TRUE)) ? TRUE : FALSE) {
            ctools_export_crud_enable('field_group', $group->identifier);
          }
        }
      }
    }

    // We clean the cache for the groups to make them visible.
    cache_clear_all('field_groups', 'cache_field');
  }

  if (!empty($export['instances'])) {
    $fields_instances = field_info_instances('node', NEXTEUROPA_NEWSROOM_CONTENT_TYPE);
    foreach ($export['instances'] as $field_name => $export_instance) {
      if (isset($fields_instances[$field_name])) {
        foreach ($view_modes as $view_mode) {
          if (isset($export_instance[$view_mode])) {
            $fields_instances[$field_name]['display'][$view_mode] = $export_instance[$view_mode];
            // Update the instance.
            field_update_instance($fields_instances[$field_name]);
          }
        }
      }
    }
  }

  return drupal_set_message(t('Your settings have been restored.'), 'status');
}

/**
 * Implements hook_form_alter().
 */
function nexteuropa_free_view_modes_form_field_ui_display_overview_form_alter(&$form, &$form_state, $form_id) {
  if ($form['#bundle'] == 'newsroom_item') {
    $form['newsroom_introduction'] = array(
      '#type' => 'markup',
      '#markup' => '<div class="messages status">' . t('This is the newsroom content type, you can freely customize the teaser and full node view modes without affecting the feature which will stay in default state.') . '</div>',
      '#weight' => -100,
    );

    if ($form['#view_mode'] == 'full' ||  $form['#view_mode'] == 'teaser') {
      // Existing backup is stored into this variable.
      $backup = variable_get('nexteuropa_newsroom_view_modes_backup', FALSE);
      // Get the current export.
      $current = _nexteuropa_free_view_modes_export_modes();
      // Prepare the default value for the  import textarea, if we have it.
      $default_value = !empty($backup) ? $backup : '';
      // Show different help text basing on the availability of a backup.
      $title = empty($backup) ? t('Paste here the code previously exported') : t('Paste here the serailized export of your configuration to restore it.');

      $form['newsroom_export'] = array(
        '#type' => 'markup',
        '#markup' => '<div class="newsroom_export"><div id="newsroom_export_content"></div></div>',
        '#weight' => 95,
      );

      $form['newsroom_status'] = array(
        '#type' => 'markup',
        '#markup' => '<div id="newsroom_status"></div>',
        '#weight' => 96,
      );

      // This is just a toggler, basically.
      $form['actions']['reveal_modes'] = array(
        '#type' => 'textfield',
        '#prefix' => '<div class="newsroom-reveal-modes">',
        '#suffix' => '</div>',
        '#value' => t('[Newsroom] Export/Import settings'),
        '#weight' => 97,
      );

      $form['export']['export_code'] = array(
        '#type' => 'textarea',
        '#prefix' => '<div id="newsroom-export-code">',
        '#suffix' => '</div>',
        '#title' => t('Copy this text and save it, you can use the import button then to restore your configurations. You can also choose to save the configuration in the database clicking on the backup button.'),
        '#description' => t('This is the export of your current configurations'),
        '#value' => $current,
        '#format' => 'html',
        '#resizable' => TRUE,
        '#wysiwyg' => FALSE,
        '#rows' => 20,
        '#weight' => 98,
      );

      $form['export_modes'] = array(
        '#type' => 'submit',
        '#value' => t('[Newsroom] Backup settings in the database'),
        '#prefix' => '<div id="newsroom-backup-submit">',
        '#suffix' => '</div>',
        '#ajax' => array(
          'callback' => '_nexteuropa_free_view_modes_export_modes_submit',
          'event' => 'click',
          'wrapper' => 'newsroom_status',
          'effect' => 'fade',
          'method' => 'replace',
          '#weight' => 99,
        ),
      );

      $form['import']['import_code'] = array(
        '#prefix' => '<div id="newsroom-import-code">',
        '#suffix' => '</div>',
        '#type' => 'textarea',
        '#title' => $title,
        '#description' => t('Serialized code export'),
        '#attributes' => array('id' => 'nexteuropa_newsroom_exported_instances'),
        '#format' => 'plain_text',
        '#resizable' => TRUE,
        '#wysiwyg' => FALSE,
        '#rows' => 20,
        '#weight' => 100,
      );

      $form['import']['import_modes'] = array(
        '#type' => 'submit',
        '#name' => 'newsroom_import',
        '#prefix' => '<div id="newsroom_import_submit">',
        '#suffix' => '</div>',
        '#value' => t('[Newsroom] Import settings'),
        '#weight' => 101,
        '#submit' => array('_nexteuropa_free_view_modes_restore_modes'),
        '#validate' => array('_nexteuropa_free_view_modes_validate_modes'),
        '#states' => array(
          'visible' => array(
            ':input[id="nexteuropa_newsroom_exported_instances"]' => array('filled' => TRUE),
          ),
        ),
      );

      if ($export = variable_get('nexteuropa_newsroom_view_modes_backup', FALSE)) {
        $form['import']['restore_modes'] = array(
          '#type' => 'submit',
          '#name' => 'newsroom_restore',
          '#prefix' => '<div id="newsroom_import_backup">',
          '#suffix' => '</div>',
          '#value' => t('[Newsroom] Import settings from the existing backup'),
          '#weight' => 102,
          '#submit' => array('_nexteuropa_free_view_modes_restore_modes'),
        );
      }

      // Attach a css to the admin settings form.
      $form['#attached']['css'] = array(
        drupal_get_path('module', 'nexteuropa_newsroom') . '/styles/nexteuropa_newsroom_admin_setting.css',
      );
      $form['#attached']['js'] = array(
        drupal_get_path('module', 'nexteuropa_newsroom') . '/js/node_view_mode_form.js',
      );
    }
  }
}

/**
 * Get field groups.
 *
 * @param array $modes
 *   Array.
 * @param string $bundle
 *   Array.
 *
 * @return array
 *   Array.
 */
function _nexteuropa_free_view_modes_get_real_groups($modes = array('teaser', 'full'), $bundle = NEXTEUROPA_NEWSROOM_CONTENT_TYPE) {
  $groups = array();
  foreach ($modes as $mode) {
    $groups[$mode] = field_group_info_groups('node', $bundle, $mode, TRUE);
  }

  return $groups;
}
